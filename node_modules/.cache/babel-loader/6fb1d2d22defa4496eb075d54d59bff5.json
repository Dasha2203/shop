{"ast":null,"code":"import styled, { css } from \"styled-components\";\nimport { flexCenter } from \"../../assets/styles\";\nconst buttonFont = css`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n`;\nexport const Button = styled.button`\n  padding: 12px 20px 13px;\n  ${flexCenter};\n  ${buttonFont};\n  color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.light;\n}};\n  background-color: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.colors.primary;\n}};\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  transition: all .3s ease;\n  \n  &:hover {\n    background-color: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.colors.primaryDark;\n}};\n  }\n  \n  svg, img {\n    margin-right: 6px;\n  }\n`;\nexport const PrimaryButton = styled(Button)`\n  color: ${_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.colors.light;\n}};\n  background-color: ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.colors.primary;\n}};\n\n  &:hover {\n    background-color: ${_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.colors.primaryDark;\n}};\n  }\n`;\nexport const SecondaryButton = styled(Button)`\n  color: ${_ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return theme.colors.light;\n}};\n  background-color: ${_ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme.colors.gray;\n}};\n\n  &:hover {\n    background-color: ${_ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return theme.colors.lightSecondary;\n}};\n  }\n`;\nexport const SecondaryBorderButton = styled(Button)`\n  color: ${_ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return theme.colors.lightSecondary;\n}};\n  background-color: transparent;\n  border: 1px solid rgba(144, 156, 181, 0.5);\n\n  &:hover {\n    color: ${_ref11 => {\n  let {\n    theme\n  } = _ref11;\n  return theme.colors.light;\n}};\n    background-color: ${_ref12 => {\n  let {\n    theme\n  } = _ref12;\n  return theme.colors.lightSecondary;\n}};\n  }\n`; // export const Button = ({children, gray}) => {\n//   return (\n//     <ButtonContainer gray={!!gray}>\n//       {children}\n//     </ButtonContainer>\n//   )\n// }","map":{"version":3,"names":["styled","css","flexCenter","buttonFont","Button","button","theme","colors","light","primary","primaryDark","PrimaryButton","SecondaryButton","gray","lightSecondary","SecondaryBorderButton"],"sources":["/Users/darakorbut/Downloads/projects/shop/src/components/Button/Button.jsx"],"sourcesContent":["import styled, {css} from \"styled-components\";\nimport {flexCenter} from \"../../assets/styles\";\n\nconst buttonFont = css`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n`;\n\nexport const Button = styled.button`\n  padding: 12px 20px 13px;\n  ${flexCenter};\n  ${buttonFont};\n  color: ${({theme}) => theme.colors.light};\n  background-color: ${({theme}) => theme.colors.primary};\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  transition: all .3s ease;\n  \n  &:hover {\n    background-color: ${({theme}) => theme.colors.primaryDark};\n  }\n  \n  svg, img {\n    margin-right: 6px;\n  }\n`;\n\nexport const PrimaryButton = styled(Button)`\n  color: ${({theme}) => theme.colors.light};\n  background-color: ${({theme}) => theme.colors.primary};\n\n  &:hover {\n    background-color: ${({theme}) => theme.colors.primaryDark};\n  }\n`;\n\nexport const SecondaryButton = styled(Button)`\n  color: ${({theme}) => theme.colors.light};\n  background-color: ${({theme}) => theme.colors.gray};\n\n  &:hover {\n    background-color: ${({theme}) => theme.colors.lightSecondary};\n  }\n`;\n\nexport const SecondaryBorderButton = styled(Button)`\n  color: ${({theme}) => theme.colors.lightSecondary};\n  background-color: transparent;\n  border: 1px solid rgba(144, 156, 181, 0.5);\n\n  &:hover {\n    color: ${({theme}) => theme.colors.light};\n    background-color: ${({theme}) => theme.colors.lightSecondary};\n  }\n`;\n\n// export const Button = ({children, gray}) => {\n//   return (\n//     <ButtonContainer gray={!!gray}>\n//       {children}\n//     </ButtonContainer>\n//   )\n// }"],"mappings":"AAAA,OAAOA,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AAEA,MAAMC,UAAU,GAAGF,GAAI;AACvB;AACA;AACA;AACA,CAJA;AAMA,OAAO,MAAMG,MAAM,GAAGJ,MAAM,CAACK,MAAO;AACpC;AACA,IAAIH,UAAW;AACf,IAAIC,UAAW;AACf,WAAW;EAAA,IAAC;IAACG;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaC,KAA1B;AAAA,CAAgC;AAC3C,sBAAsB;EAAA,IAAC;IAACF;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaE,OAA1B;AAAA,CAAkC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;EAAA,IAAC;IAACH;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaG,WAA1B;AAAA,CAAsC;AAC9D;AACA;AACA;AACA;AACA;AACA,CAlBO;AAoBP,OAAO,MAAMC,aAAa,GAAGX,MAAM,CAACI,MAAD,CAAS;AAC5C,WAAW;EAAA,IAAC;IAACE;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaC,KAA1B;AAAA,CAAgC;AAC3C,sBAAsB;EAAA,IAAC;IAACF;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaE,OAA1B;AAAA,CAAkC;AACxD;AACA;AACA,wBAAwB;EAAA,IAAC;IAACH;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaG,WAA1B;AAAA,CAAsC;AAC9D;AACA,CAPO;AASP,OAAO,MAAME,eAAe,GAAGZ,MAAM,CAACI,MAAD,CAAS;AAC9C,WAAW;EAAA,IAAC;IAACE;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaC,KAA1B;AAAA,CAAgC;AAC3C,sBAAsB;EAAA,IAAC;IAACF;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaM,IAA1B;AAAA,CAA+B;AACrD;AACA;AACA,wBAAwB;EAAA,IAAC;IAACP;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaO,cAA1B;AAAA,CAAyC;AACjE;AACA,CAPO;AASP,OAAO,MAAMC,qBAAqB,GAAGf,MAAM,CAACI,MAAD,CAAS;AACpD,WAAW;EAAA,IAAC;IAACE;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaO,cAA1B;AAAA,CAAyC;AACpD;AACA;AACA;AACA;AACA,aAAa;EAAA,IAAC;IAACR;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaC,KAA1B;AAAA,CAAgC;AAC7C,wBAAwB;EAAA,IAAC;IAACF;EAAD,CAAD;EAAA,OAAaA,KAAK,CAACC,MAAN,CAAaO,cAA1B;AAAA,CAAyC;AACjE;AACA,CATO,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}